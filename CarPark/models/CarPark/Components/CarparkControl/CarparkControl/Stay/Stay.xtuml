-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("324b9649-c373-4ba1-814c-460202283e85",
	'Stay',
	5,
	'Stay',
	'Tracks a single stay of a single vehicle in a given carpark.
Created when a ticket is collected from an entry stand.
',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("751b003c-8805-4812-ad25-1c5be4949853",
	"324b9649-c373-4ba1-814c-460202283e85",
	'ProcessExit',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'// Returns true if this exit can proceed immediately, false otherwise.
// If this exit requires operator intervention because the exit 
// deadline was missed or no payment has yet been made, notify the 
// operator, providing all relevant data.
proceed = false;
CurrentTime = 0;  // @TODO actually get the current time from the system

// If there is an instance of charge, determine whether
// the exit deadline was met.
select any charge related by self->
  ChargeSegment[R15]->
  Charge[R23.''addend of''];
if ( not empty charge )
  if ( CurrentTime <= charge.ExitDeadline ) 
    proceed = true;
  else
    // Create additional charge for tardy exit
    self.CalculateAdditionalCharge( ExitTime:CurrentTime );
    // @TODO Notify operator of tardy exit.
  end if;
else
  // Create charge for unpaid stay.
  self.CalculateCharge( ExitTime:CurrentTime );
  // @TODO Notify operator of unpaid stay.
end if;

return proceed;',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0);
INSERT INTO O_TFR
	VALUES ("5ec3c370-e4d4-48c1-9495-dc0a5f6e4177",
	"324b9649-c373-4ba1-814c-460202283e85",
	'CalculateCharge',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'self.CreateChargeSegments( ExitTime:param.ExitTime );

// Sum all charge segments and store the result in a charge
// and relate the segments to the charge.
create object instance Charge of Charge;
Charge.Amount = 0;
Charge.WaiverGranted = false;
select many ChgSegs related by self->ChargeSegment[R15];
for each ChgSeg in ChgSegs
  Charge.Amount = Charge.Amount + ChgSeg.Amount;
  relate Charge to ChgSeg across R23.''sum of'';
end for;',
	1,
	'',
	"751b003c-8805-4812-ad25-1c5be4949853",
	0);
INSERT INTO O_TPARM
	VALUES ("168708fb-f9ea-42f8-b761-8afa83735829",
	"5ec3c370-e4d4-48c1-9495-dc0a5f6e4177",
	'ExitTime',
	"d3fcb8ce-ecb8-4cf7-b70d-7ae617f25ee4",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("d3fcb8ce-ecb8-4cf7-b70d-7ae617f25ee4",
	"00000000-0000-0000-0000-000000000000",
	'Time',
	'',
	'',
	'../../../../../../../TimeUtil/models/TimeUtil/DateTime/DateTime.xtuml');
INSERT INTO O_TFR
	VALUES ("bc8cfa9a-3b0c-457e-840d-222ea12cb4ca",
	"324b9649-c373-4ba1-814c-460202283e85",
	'CreateChargeSegments',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Find all relevant instances of fee schedule for this stay
// and relate each one to this stay using one charge segment.

// First, find the fee schedule covering the end of the stay 
// by finding the earliest end time that is later than the 
// exit time for this stay.
cursor = 0;
EndPosition = 0;
select any FeeSched from instances of FeeSchedule where false;  // Decl
while ( true )
  select any FeeSched related by self->
    Carpark[R7.''generates revenue for'']->
    FeeSchedule[R14.''applies'']
    where ( selected.Position == cursor );
  if ( FeeSched.End >= param.ExitTime )
    EndPosition = cursor;
    break;
  else
    cursor = cursor + 1;
  end if;
end while;

// Next, find the fee schedule instance covering the entry
// time for this stay by walking backwards through the 
// sequence to find the latest start time that is earlier 
// than the entry time for this stay.
StartPosition = EndPosition;
while ( cursor >= 0 )
  select any FeeSched related by self->
    Carpark[R7.''generates revenue for'']->
    FeeSchedule[R14.''applies'']
    where ( selected.Position == cursor );
  if ( FeeSched.Start <= self.EntryTime )
    StartPosition = cursor;
    break;
  else
    cursor = cursor - 1;
  end if;
end while;

// Link all relevant fee schedules to this stay using a charge
// segment for each link, and prod each charge segment to 
// calculate and store the amount.
cursor = StartPosition;
while ( cursor <= EndPosition )
  create object instance ChgSeg of ChargeSegment;
  select any FeeSched related by self->
    Carpark[R7.''generates revenue for'']->
    FeeSchedule[R14.''applies'']
    where ( selected.Position == cursor );
  relate FeeSched to self across R15.''applies to'' using ChgSeg;
  ChgSeg.CalculateCharge( ExitTime:param.ExitTime );
  cursor = cursor + 1;
end while;',
	1,
	'',
	"06197662-c0f1-4004-b298-a27ee1441249",
	0);
INSERT INTO O_TPARM
	VALUES ("766c40a1-740c-4382-b903-6a898940b10c",
	"bc8cfa9a-3b0c-457e-840d-222ea12cb4ca",
	'ExitTime',
	"d3fcb8ce-ecb8-4cf7-b70d-7ae617f25ee4",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("06197662-c0f1-4004-b298-a27ee1441249",
	"324b9649-c373-4ba1-814c-460202283e85",
	'CalculateAdditionalCharge',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'self.CreateChargeSegments( ExitTime:param.ExitTime );

// Sum all charge segments and store the result in an 
// additional charge and relate the segments to the
// additional charge.
create object instance AdditionalCharge of AdditionalCharge;
AdditionalCharge.Amount = 0;
AdditionalCharge.WaiverGranted = false;
select many ChgSegs related by self->ChargeSegment[R15];
for each ChgSeg in ChgSegs
  AdditionalCharge.Amount = AdditionalCharge.Amount + ChgSeg.Amount;
  relate AdditionalCharge to ChgSeg across R24.''sum of'';
end for;',
	1,
	'',
	"5ec3c370-e4d4-48c1-9495-dc0a5f6e4177",
	0);
INSERT INTO O_TPARM
	VALUES ("1c63375d-6995-45cd-91be-b25184154d83",
	"06197662-c0f1-4004-b298-a27ee1441249",
	'ExitTime',
	"d3fcb8ce-ecb8-4cf7-b70d-7ae617f25ee4",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("4688c039-b4ac-457d-b154-20d5a88099f6",
	"324b9649-c373-4ba1-814c-460202283e85",
	'RemoveCharge',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Unrelate and remove everything associated with the charge for this stay.
select any charge related by self->ChargeSegment[R15]->
  Charge[R23.''addend of''];
select many ChgSegs related by charge->ChargeSegment[R23.''sum of''];
for each ChgSeg in ChgSegs
  unrelate ChgSeg from charge across R23.''addend of'';
  select one FeeSched related by ChgSeg->FeeSchedule[R15.''spans''];
  unrelate FeeSched from self across R15.''applies to'' using ChgSeg;
  delete object instance ChgSeg;
end for;
delete object instance charge;',
	1,
	'',
	"bc8cfa9a-3b0c-457e-840d-222ea12cb4ca",
	0);
INSERT INTO O_NBATTR
	VALUES ("48ad1eab-ce0d-4eeb-b353-4bbe45a4f93c",
	"324b9649-c373-4ba1-814c-460202283e85");
INSERT INTO O_BATTR
	VALUES ("48ad1eab-ce0d-4eeb-b353-4bbe45a4f93c",
	"324b9649-c373-4ba1-814c-460202283e85");
INSERT INTO O_ATTR
	VALUES ("48ad1eab-ce0d-4eeb-b353-4bbe45a4f93c",
	"324b9649-c373-4ba1-814c-460202283e85",
	"cca74e46-bc96-426c-96e8-e802f12ebaf0",
	'EntryTime',
	'',
	'',
	'EntryTime',
	0,
	"d3fcb8ce-ecb8-4cf7-b70d-7ae617f25ee4",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("cca74e46-bc96-426c-96e8-e802f12ebaf0",
	"324b9649-c373-4ba1-814c-460202283e85");
INSERT INTO O_BATTR
	VALUES ("cca74e46-bc96-426c-96e8-e802f12ebaf0",
	"324b9649-c373-4ba1-814c-460202283e85");
INSERT INTO O_ATTR
	VALUES ("cca74e46-bc96-426c-96e8-e802f12ebaf0",
	"324b9649-c373-4ba1-814c-460202283e85",
	"00000000-0000-0000-0000-000000000000",
	'TicketNumber',
	'Identifier printed on the ticket by the issuaing entry stand.

Req: CP-2
',
	'',
	'TicketNumber',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"324b9649-c373-4ba1-814c-460202283e85");
INSERT INTO O_OIDA
	VALUES ("cca74e46-bc96-426c-96e8-e802f12ebaf0",
	"324b9649-c373-4ba1-814c-460202283e85",
	0,
	'TicketNumber');
INSERT INTO O_ID
	VALUES (1,
	"324b9649-c373-4ba1-814c-460202283e85");
INSERT INTO O_ID
	VALUES (2,
	"324b9649-c373-4ba1-814c-460202283e85");
INSERT INTO PE_PE
	VALUES ("324b9649-c373-4ba1-814c-460202283e85",
	1,
	"0e2ca0ec-d69c-4d5e-a330-1f86d9c2ffa4",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("0e2ca0ec-d69c-4d5e-a330-1f86d9c2ffa4",
	"00000000-0000-0000-0000-000000000000",
	"887b82b9-56ec-4387-b15a-8b42f655cdba",
	'CarparkControl',
	'',
	0,
	'../CarparkControl.xtuml');
